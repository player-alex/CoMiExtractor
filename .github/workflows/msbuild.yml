# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  # This variable is used to define the solution's location.
  SOLUTION_ROOT: CoMiExtractor/CoMiExtractor

  # Configuration type to build (e.g., Release).
  BUILD_CONFIGURATION: Release

  # Platform to build for (e.g., x86, x64).
  BUILD_PLATFORM: x86

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      # Set the working directory to the solution folder to ensure correct path resolution.
      working-directory: ${{ env.SOLUTION_ROOT }}
      # Use msbuild /t:Restore to restore packages, which is a cleaner approach.
      run: msbuild CoMiExtractor.sln /t:Restore /p:Platform=${{env.BUILD_PLATFORM}}

    - name: Build
      # Set the working directory to the solution folder.
      working-directory: ${{ env.SOLUTION_ROOT }}
      # Use the /p:OutDir property to specify where the built files should be saved.
      run: msbuild CoMiExtractor.sln /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} /p:OutDir=releases/${{env.BUILD_PLATFORM}}/

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CoMiExtractor-${{env.BUILD_PLATFORM}}-binaries
        # Set the working directory to the solution folder to match the build output location.
        working-directory: ${{ env.SOLUTION_ROOT }}
        # The path is now relative to the working directory.
        path: releases/${{env.BUILD_PLATFORM}}/
